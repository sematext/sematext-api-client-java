/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sematext.cloud.client;

import com.sematext.cloud.ApiException;
import com.sematext.cloud.model.AppDescription;
import com.sematext.cloud.model.GenericApiResponse;
import com.sematext.cloud.model.Invitation;
import com.sematext.cloud.model.UpdateAppInfo;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppsApi
 */
@Ignore
public class AppsApiTest {

    private final AppsApi api = new AppsApi();

    
    /**
     * Get all App types supported for the account identified with apiKey
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppTypesUsingGETTest() throws ApiException {
        GenericApiResponse response = api.getAppTypesUsingGET();

        // TODO: test validations
    }
    
    /**
     * Gets defails for one particular App
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsingGETTest() throws ApiException {
        Long anyStateAppId = null;
        GenericApiResponse response = api.getUsingGET(anyStateAppId);

        // TODO: test validations
    }
    
    /**
     * Invite guests to an app
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void inviteAppGuestsUsingPOST1Test() throws ApiException {
        Invitation invitation = null;
        GenericApiResponse response = api.inviteAppGuestsUsingPOST1(invitation);

        // TODO: test validations
    }
    
    /**
     * Get all users of apps accessible to this account
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAppsUsersUsingGETTest() throws ApiException {
        GenericApiResponse response = api.listAppsUsersUsingGET();

        // TODO: test validations
    }
    
    /**
     * Get all apps accessible by account identified with apiKey
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listUsingGET1Test() throws ApiException {
        GenericApiResponse response = api.listUsingGET1();

        // TODO: test validations
    }
    
    /**
     * Update description of the app
     *
     * App can be in any state
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDescriptionUsingPUT1Test() throws ApiException {
        Long anyStateAppId = null;
        AppDescription updateDetails = null;
        GenericApiResponse response = api.updateDescriptionUsingPUT1(anyStateAppId, updateDetails);

        // TODO: test validations
    }
    
    /**
     * Update app
     *
     * App can be in any state
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUsingPUT2Test() throws ApiException {
        UpdateAppInfo dto = null;
        Long anyStateAppId = null;
        GenericApiResponse response = api.updateUsingPUT2(dto, anyStateAppId);

        // TODO: test validations
    }
    
}
