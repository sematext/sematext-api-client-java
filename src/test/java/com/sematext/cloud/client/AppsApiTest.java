/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sematext.cloud.client;

import com.sematext.cloud.model.AppDescription;
import com.sematext.cloud.model.AppResponse;
import com.sematext.cloud.model.AppTypesResponse;
import com.sematext.cloud.model.AppsResponse;
import com.sematext.cloud.model.GenericMapBasedApiResponse;
import com.sematext.cloud.model.Invitation;
import com.sematext.cloud.model.UpdateAppInfo;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for AppsApi
 */
@Ignore
public class AppsApiTest {

    private final AppsApi api = new AppsApi();

    /**
     * delete
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteUsingDELETETest() throws Exception {
        Long anyStateAppId = null;
        GenericMapBasedApiResponse response = api.deleteUsingDELETE(anyStateAppId);

        // TODO: test validations
    }
    /**
     * Get all App types supported for the account identified with apiKey
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAppTypesUsingGETTest() throws Exception {
        AppTypesResponse response = api.getAppTypesUsingGET();

        // TODO: test validations
    }
    /**
     * Gets defails for one particular App
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUsingGETTest() throws Exception {
        Long anyStateAppId = null;
        AppResponse response = api.getUsingGET(anyStateAppId);

        // TODO: test validations
    }
    /**
     * Invite guests to an app
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void inviteAppGuestsUsingPOSTTest() throws Exception {
        Invitation body = null;
        GenericMapBasedApiResponse response = api.inviteAppGuestsUsingPOST(body);

        // TODO: test validations
    }
    /**
     * Get all users of apps accessible to this account
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listAppsUsersUsingGETTest() throws Exception {
        AppsResponse response = api.listAppsUsersUsingGET();

        // TODO: test validations
    }
    /**
     * Get all apps accessible by account identified with apiKey
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listUsingGETTest() throws Exception {
        AppsResponse response = api.listUsingGET();

        // TODO: test validations
    }
    /**
     * Update description of the app
     *
     * App can be in any state
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateDescriptionUsingPUT1Test() throws Exception {
        Long anyStateAppId = null;
        AppDescription body = null;
        AppResponse response = api.updateDescriptionUsingPUT1(anyStateAppId, body);

        // TODO: test validations
    }
    /**
     * Update app
     *
     * App can be in any state
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateUsingPUT2Test() throws Exception {
        UpdateAppInfo body = null;
        Long anyStateAppId = null;
        AppResponse response = api.updateUsingPUT2(body, anyStateAppId);

        // TODO: test validations
    }
}
