/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.sematext.stcloud.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AlertNotificationRequest
 */

public class AlertNotificationRequest {
  @SerializedName("defaultInterval")
  private Long defaultInterval = null;

  @SerializedName("end")
  private String end = null;

  @SerializedName("interval")
  private String interval = null;

  @SerializedName("start")
  private String start = null;

  public AlertNotificationRequest defaultInterval(Long defaultInterval) {
    this.defaultInterval = defaultInterval;
    return this;
  }

   /**
   * Get defaultInterval
   * @return defaultInterval
  **/
  @ApiModelProperty(value = "")
  public Long getDefaultInterval() {
    return defaultInterval;
  }

  public void setDefaultInterval(Long defaultInterval) {
    this.defaultInterval = defaultInterval;
  }

  public AlertNotificationRequest end(String end) {
    this.end = end;
    return this;
  }

   /**
   * End time of interval. Can be expressed as timestamp in milliseconds or UTC date in yyyy-MM-dd HH:mm:ss format
   * @return end
  **/
  @ApiModelProperty(value = "End time of interval. Can be expressed as timestamp in milliseconds or UTC date in yyyy-MM-dd HH:mm:ss format")
  public String getEnd() {
    return end;
  }

  public void setEnd(String end) {
    this.end = end;
  }

  public AlertNotificationRequest interval(String interval) {
    this.interval = interval;
    return this;
  }

   /**
   * Get interval
   * @return interval
  **/
  @ApiModelProperty(value = "")
  public String getInterval() {
    return interval;
  }

  public void setInterval(String interval) {
    this.interval = interval;
  }

  public AlertNotificationRequest start(String start) {
    this.start = start;
    return this;
  }

   /**
   * Start time of interval. Can be expressed as timestamp in milliseconds or UTC date in yyyy-MM-dd HH:mm:ss format
   * @return start
  **/
  @ApiModelProperty(value = "Start time of interval. Can be expressed as timestamp in milliseconds or UTC date in yyyy-MM-dd HH:mm:ss format")
  public String getStart() {
    return start;
  }

  public void setStart(String start) {
    this.start = start;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertNotificationRequest alertNotificationRequest = (AlertNotificationRequest) o;
    return Objects.equals(this.defaultInterval, alertNotificationRequest.defaultInterval) &&
        Objects.equals(this.end, alertNotificationRequest.end) &&
        Objects.equals(this.interval, alertNotificationRequest.interval) &&
        Objects.equals(this.start, alertNotificationRequest.start);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultInterval, end, interval, start);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertNotificationRequest {\n");
    
    sb.append("    defaultInterval: ").append(toIndentedString(defaultInterval)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

