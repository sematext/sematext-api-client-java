/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sematext.cloud.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sematext.cloud.model.DailyDto;
import com.sematext.cloud.model.LimitChangeEventDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
/**
 * UsageDto
 */


public class UsageDto {
  @SerializedName("dailyUsage")
  private List<DailyDto> dailyUsage = null;

  @SerializedName("dailyVolumeMB")
  private Long dailyVolumeMB = null;

  @SerializedName("end")
  private OffsetDateTime end = null;

  @SerializedName("failedCount")
  private Long failedCount = null;

  @SerializedName("ingestedCount")
  private Long ingestedCount = null;

  @SerializedName("ingestedVolume")
  private Long ingestedVolume = null;

  @SerializedName("limitChangeEvents")
  private List<LimitChangeEventDTO> limitChangeEvents = null;

  @SerializedName("maxAllowedMB")
  private Long maxAllowedMB = null;

  @SerializedName("maxLimitMB")
  private Long maxLimitMB = null;

  @SerializedName("start")
  private OffsetDateTime start = null;

  @SerializedName("storedCount")
  private Long storedCount = null;

  @SerializedName("storedVolume")
  private Long storedVolume = null;

  @SerializedName("volumeChangeEvents")
  private List<LimitChangeEventDTO> volumeChangeEvents = null;

  public UsageDto dailyUsage(List<DailyDto> dailyUsage) {
    this.dailyUsage = dailyUsage;
    return this;
  }

  public UsageDto addDailyUsageItem(DailyDto dailyUsageItem) {
    if (this.dailyUsage == null) {
      this.dailyUsage = new ArrayList<>();
    }
    this.dailyUsage.add(dailyUsageItem);
    return this;
  }

   /**
   * Get dailyUsage
   * @return dailyUsage
  **/
  @Schema(description = "")
  public List<DailyDto> getDailyUsage() {
    return dailyUsage;
  }

  public void setDailyUsage(List<DailyDto> dailyUsage) {
    this.dailyUsage = dailyUsage;
  }

  public UsageDto dailyVolumeMB(Long dailyVolumeMB) {
    this.dailyVolumeMB = dailyVolumeMB;
    return this;
  }

   /**
   * Get dailyVolumeMB
   * @return dailyVolumeMB
  **/
  @Schema(description = "")
  public Long getDailyVolumeMB() {
    return dailyVolumeMB;
  }

  public void setDailyVolumeMB(Long dailyVolumeMB) {
    this.dailyVolumeMB = dailyVolumeMB;
  }

  public UsageDto end(OffsetDateTime end) {
    this.end = end;
    return this;
  }

   /**
   * Get end
   * @return end
  **/
  @Schema(description = "")
  public OffsetDateTime getEnd() {
    return end;
  }

  public void setEnd(OffsetDateTime end) {
    this.end = end;
  }

  public UsageDto failedCount(Long failedCount) {
    this.failedCount = failedCount;
    return this;
  }

   /**
   * Get failedCount
   * @return failedCount
  **/
  @Schema(description = "")
  public Long getFailedCount() {
    return failedCount;
  }

  public void setFailedCount(Long failedCount) {
    this.failedCount = failedCount;
  }

  public UsageDto ingestedCount(Long ingestedCount) {
    this.ingestedCount = ingestedCount;
    return this;
  }

   /**
   * Get ingestedCount
   * @return ingestedCount
  **/
  @Schema(description = "")
  public Long getIngestedCount() {
    return ingestedCount;
  }

  public void setIngestedCount(Long ingestedCount) {
    this.ingestedCount = ingestedCount;
  }

  public UsageDto ingestedVolume(Long ingestedVolume) {
    this.ingestedVolume = ingestedVolume;
    return this;
  }

   /**
   * Get ingestedVolume
   * @return ingestedVolume
  **/
  @Schema(description = "")
  public Long getIngestedVolume() {
    return ingestedVolume;
  }

  public void setIngestedVolume(Long ingestedVolume) {
    this.ingestedVolume = ingestedVolume;
  }

  public UsageDto limitChangeEvents(List<LimitChangeEventDTO> limitChangeEvents) {
    this.limitChangeEvents = limitChangeEvents;
    return this;
  }

  public UsageDto addLimitChangeEventsItem(LimitChangeEventDTO limitChangeEventsItem) {
    if (this.limitChangeEvents == null) {
      this.limitChangeEvents = new ArrayList<>();
    }
    this.limitChangeEvents.add(limitChangeEventsItem);
    return this;
  }

   /**
   * Get limitChangeEvents
   * @return limitChangeEvents
  **/
  @Schema(description = "")
  public List<LimitChangeEventDTO> getLimitChangeEvents() {
    return limitChangeEvents;
  }

  public void setLimitChangeEvents(List<LimitChangeEventDTO> limitChangeEvents) {
    this.limitChangeEvents = limitChangeEvents;
  }

  public UsageDto maxAllowedMB(Long maxAllowedMB) {
    this.maxAllowedMB = maxAllowedMB;
    return this;
  }

   /**
   * Get maxAllowedMB
   * @return maxAllowedMB
  **/
  @Schema(description = "")
  public Long getMaxAllowedMB() {
    return maxAllowedMB;
  }

  public void setMaxAllowedMB(Long maxAllowedMB) {
    this.maxAllowedMB = maxAllowedMB;
  }

  public UsageDto maxLimitMB(Long maxLimitMB) {
    this.maxLimitMB = maxLimitMB;
    return this;
  }

   /**
   * Get maxLimitMB
   * @return maxLimitMB
  **/
  @Schema(description = "")
  public Long getMaxLimitMB() {
    return maxLimitMB;
  }

  public void setMaxLimitMB(Long maxLimitMB) {
    this.maxLimitMB = maxLimitMB;
  }

  public UsageDto start(OffsetDateTime start) {
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @Schema(description = "")
  public OffsetDateTime getStart() {
    return start;
  }

  public void setStart(OffsetDateTime start) {
    this.start = start;
  }

  public UsageDto storedCount(Long storedCount) {
    this.storedCount = storedCount;
    return this;
  }

   /**
   * Get storedCount
   * @return storedCount
  **/
  @Schema(description = "")
  public Long getStoredCount() {
    return storedCount;
  }

  public void setStoredCount(Long storedCount) {
    this.storedCount = storedCount;
  }

  public UsageDto storedVolume(Long storedVolume) {
    this.storedVolume = storedVolume;
    return this;
  }

   /**
   * Get storedVolume
   * @return storedVolume
  **/
  @Schema(description = "")
  public Long getStoredVolume() {
    return storedVolume;
  }

  public void setStoredVolume(Long storedVolume) {
    this.storedVolume = storedVolume;
  }

  public UsageDto volumeChangeEvents(List<LimitChangeEventDTO> volumeChangeEvents) {
    this.volumeChangeEvents = volumeChangeEvents;
    return this;
  }

  public UsageDto addVolumeChangeEventsItem(LimitChangeEventDTO volumeChangeEventsItem) {
    if (this.volumeChangeEvents == null) {
      this.volumeChangeEvents = new ArrayList<>();
    }
    this.volumeChangeEvents.add(volumeChangeEventsItem);
    return this;
  }

   /**
   * Get volumeChangeEvents
   * @return volumeChangeEvents
  **/
  @Schema(description = "")
  public List<LimitChangeEventDTO> getVolumeChangeEvents() {
    return volumeChangeEvents;
  }

  public void setVolumeChangeEvents(List<LimitChangeEventDTO> volumeChangeEvents) {
    this.volumeChangeEvents = volumeChangeEvents;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsageDto usageDto = (UsageDto) o;
    return Objects.equals(this.dailyUsage, usageDto.dailyUsage) &&
        Objects.equals(this.dailyVolumeMB, usageDto.dailyVolumeMB) &&
        Objects.equals(this.end, usageDto.end) &&
        Objects.equals(this.failedCount, usageDto.failedCount) &&
        Objects.equals(this.ingestedCount, usageDto.ingestedCount) &&
        Objects.equals(this.ingestedVolume, usageDto.ingestedVolume) &&
        Objects.equals(this.limitChangeEvents, usageDto.limitChangeEvents) &&
        Objects.equals(this.maxAllowedMB, usageDto.maxAllowedMB) &&
        Objects.equals(this.maxLimitMB, usageDto.maxLimitMB) &&
        Objects.equals(this.start, usageDto.start) &&
        Objects.equals(this.storedCount, usageDto.storedCount) &&
        Objects.equals(this.storedVolume, usageDto.storedVolume) &&
        Objects.equals(this.volumeChangeEvents, usageDto.volumeChangeEvents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dailyUsage, dailyVolumeMB, end, failedCount, ingestedCount, ingestedVolume, limitChangeEvents, maxAllowedMB, maxLimitMB, start, storedCount, storedVolume, volumeChangeEvents);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsageDto {\n");
    
    sb.append("    dailyUsage: ").append(toIndentedString(dailyUsage)).append("\n");
    sb.append("    dailyVolumeMB: ").append(toIndentedString(dailyVolumeMB)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    failedCount: ").append(toIndentedString(failedCount)).append("\n");
    sb.append("    ingestedCount: ").append(toIndentedString(ingestedCount)).append("\n");
    sb.append("    ingestedVolume: ").append(toIndentedString(ingestedVolume)).append("\n");
    sb.append("    limitChangeEvents: ").append(toIndentedString(limitChangeEvents)).append("\n");
    sb.append("    maxAllowedMB: ").append(toIndentedString(maxAllowedMB)).append("\n");
    sb.append("    maxLimitMB: ").append(toIndentedString(maxLimitMB)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    storedCount: ").append(toIndentedString(storedCount)).append("\n");
    sb.append("    storedVolume: ").append(toIndentedString(storedVolume)).append("\n");
    sb.append("    volumeChangeEvents: ").append(toIndentedString(volumeChangeEvents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
