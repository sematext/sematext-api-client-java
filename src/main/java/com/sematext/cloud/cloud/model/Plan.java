/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sematext.cloud.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * Plan
 */


public class Plan {
  @SerializedName("appType")
  private String appType = null;

  @SerializedName("custom")
  private Boolean custom = null;

  @SerializedName("dataRetentionHours")
  private BigDecimal dataRetentionHours = null;

  @SerializedName("defaultTrialPlan")
  private Boolean defaultTrialPlan = null;

  @SerializedName("free")
  private Boolean free = null;

  @SerializedName("freeTrialDays")
  private Long freeTrialDays = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("maxAlerts")
  private Long maxAlerts = null;

  @SerializedName("maxDailyEvents")
  private Long maxDailyEvents = null;

  @SerializedName("name")
  private String name = null;

  /**
   * Gets or Sets planScheme
   */
  @JsonAdapter(PlanSchemeEnum.Adapter.class)
  public enum PlanSchemeEnum {
    SPM_1_0("SPM_1_0"),
    SPM_2_0("SPM_2_0"),
    SEARCHENE_1_0("SEARCHENE_1_0"),
    LOGSENE_1_0("LOGSENE_1_0"),
    LOGSENE_2_0("LOGSENE_2_0"),
    RUM_1_0("RUM_1_0"),
    RUM_1_1("RUM_1_1"),
    RUM_EA("RUM_EA"),
    SYNTHETICS_EA("SYNTHETICS_EA"),
    SYNTHETICS_1_0("SYNTHETICS_1_0"),
    BUGZ_EA("BUGZ_EA");

    private String value;

    PlanSchemeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PlanSchemeEnum fromValue(String input) {
      for (PlanSchemeEnum b : PlanSchemeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PlanSchemeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PlanSchemeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public PlanSchemeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return PlanSchemeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("planScheme")
  private PlanSchemeEnum planScheme = null;

  /**
   * Gets or Sets sematextService
   */
  @JsonAdapter(SematextServiceEnum.Adapter.class)
  public enum SematextServiceEnum {
    LOGSENE("LOGSENE"),
    SPM("SPM"),
    RUM("RUM"),
    SYNTHETICS("SYNTHETICS");

    private String value;

    SematextServiceEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SematextServiceEnum fromValue(String input) {
      for (SematextServiceEnum b : SematextServiceEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SematextServiceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SematextServiceEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SematextServiceEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SematextServiceEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("sematextService")
  private SematextServiceEnum sematextService = null;

  @SerializedName("trialPlan")
  private Boolean trialPlan = null;

  public Plan appType(String appType) {
    this.appType = appType;
    return this;
  }

   /**
   * Get appType
   * @return appType
  **/
  @Schema(description = "")
  public String getAppType() {
    return appType;
  }

  public void setAppType(String appType) {
    this.appType = appType;
  }

  public Plan custom(Boolean custom) {
    this.custom = custom;
    return this;
  }

   /**
   * Get custom
   * @return custom
  **/
  @Schema(description = "")
  public Boolean isCustom() {
    return custom;
  }

  public void setCustom(Boolean custom) {
    this.custom = custom;
  }

  public Plan dataRetentionHours(BigDecimal dataRetentionHours) {
    this.dataRetentionHours = dataRetentionHours;
    return this;
  }

   /**
   * Get dataRetentionHours
   * @return dataRetentionHours
  **/
  @Schema(description = "")
  public BigDecimal getDataRetentionHours() {
    return dataRetentionHours;
  }

  public void setDataRetentionHours(BigDecimal dataRetentionHours) {
    this.dataRetentionHours = dataRetentionHours;
  }

  public Plan defaultTrialPlan(Boolean defaultTrialPlan) {
    this.defaultTrialPlan = defaultTrialPlan;
    return this;
  }

   /**
   * Get defaultTrialPlan
   * @return defaultTrialPlan
  **/
  @Schema(description = "")
  public Boolean isDefaultTrialPlan() {
    return defaultTrialPlan;
  }

  public void setDefaultTrialPlan(Boolean defaultTrialPlan) {
    this.defaultTrialPlan = defaultTrialPlan;
  }

  public Plan free(Boolean free) {
    this.free = free;
    return this;
  }

   /**
   * Get free
   * @return free
  **/
  @Schema(description = "")
  public Boolean isFree() {
    return free;
  }

  public void setFree(Boolean free) {
    this.free = free;
  }

  public Plan freeTrialDays(Long freeTrialDays) {
    this.freeTrialDays = freeTrialDays;
    return this;
  }

   /**
   * Get freeTrialDays
   * @return freeTrialDays
  **/
  @Schema(description = "")
  public Long getFreeTrialDays() {
    return freeTrialDays;
  }

  public void setFreeTrialDays(Long freeTrialDays) {
    this.freeTrialDays = freeTrialDays;
  }

  public Plan id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Plan maxAlerts(Long maxAlerts) {
    this.maxAlerts = maxAlerts;
    return this;
  }

   /**
   * Get maxAlerts
   * @return maxAlerts
  **/
  @Schema(description = "")
  public Long getMaxAlerts() {
    return maxAlerts;
  }

  public void setMaxAlerts(Long maxAlerts) {
    this.maxAlerts = maxAlerts;
  }

  public Plan maxDailyEvents(Long maxDailyEvents) {
    this.maxDailyEvents = maxDailyEvents;
    return this;
  }

   /**
   * Get maxDailyEvents
   * @return maxDailyEvents
  **/
  @Schema(description = "")
  public Long getMaxDailyEvents() {
    return maxDailyEvents;
  }

  public void setMaxDailyEvents(Long maxDailyEvents) {
    this.maxDailyEvents = maxDailyEvents;
  }

  public Plan name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Plan planScheme(PlanSchemeEnum planScheme) {
    this.planScheme = planScheme;
    return this;
  }

   /**
   * Get planScheme
   * @return planScheme
  **/
  @Schema(description = "")
  public PlanSchemeEnum getPlanScheme() {
    return planScheme;
  }

  public void setPlanScheme(PlanSchemeEnum planScheme) {
    this.planScheme = planScheme;
  }

  public Plan sematextService(SematextServiceEnum sematextService) {
    this.sematextService = sematextService;
    return this;
  }

   /**
   * Get sematextService
   * @return sematextService
  **/
  @Schema(description = "")
  public SematextServiceEnum getSematextService() {
    return sematextService;
  }

  public void setSematextService(SematextServiceEnum sematextService) {
    this.sematextService = sematextService;
  }

  public Plan trialPlan(Boolean trialPlan) {
    this.trialPlan = trialPlan;
    return this;
  }

   /**
   * Get trialPlan
   * @return trialPlan
  **/
  @Schema(description = "")
  public Boolean isTrialPlan() {
    return trialPlan;
  }

  public void setTrialPlan(Boolean trialPlan) {
    this.trialPlan = trialPlan;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Plan plan = (Plan) o;
    return Objects.equals(this.appType, plan.appType) &&
        Objects.equals(this.custom, plan.custom) &&
        Objects.equals(this.dataRetentionHours, plan.dataRetentionHours) &&
        Objects.equals(this.defaultTrialPlan, plan.defaultTrialPlan) &&
        Objects.equals(this.free, plan.free) &&
        Objects.equals(this.freeTrialDays, plan.freeTrialDays) &&
        Objects.equals(this.id, plan.id) &&
        Objects.equals(this.maxAlerts, plan.maxAlerts) &&
        Objects.equals(this.maxDailyEvents, plan.maxDailyEvents) &&
        Objects.equals(this.name, plan.name) &&
        Objects.equals(this.planScheme, plan.planScheme) &&
        Objects.equals(this.sematextService, plan.sematextService) &&
        Objects.equals(this.trialPlan, plan.trialPlan);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appType, custom, dataRetentionHours, defaultTrialPlan, free, freeTrialDays, id, maxAlerts, maxDailyEvents, name, planScheme, sematextService, trialPlan);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Plan {\n");
    
    sb.append("    appType: ").append(toIndentedString(appType)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    dataRetentionHours: ").append(toIndentedString(dataRetentionHours)).append("\n");
    sb.append("    defaultTrialPlan: ").append(toIndentedString(defaultTrialPlan)).append("\n");
    sb.append("    free: ").append(toIndentedString(free)).append("\n");
    sb.append("    freeTrialDays: ").append(toIndentedString(freeTrialDays)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    maxAlerts: ").append(toIndentedString(maxAlerts)).append("\n");
    sb.append("    maxDailyEvents: ").append(toIndentedString(maxDailyEvents)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    planScheme: ").append(toIndentedString(planScheme)).append("\n");
    sb.append("    sematextService: ").append(toIndentedString(sematextService)).append("\n");
    sb.append("    trialPlan: ").append(toIndentedString(trialPlan)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
