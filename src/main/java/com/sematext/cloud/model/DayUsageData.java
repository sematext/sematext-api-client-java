/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sematext.cloud.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * DayUsageData
 */


public class DayUsageData {
  @SerializedName("countDailyDataPoints")
  private Integer countDailyDataPoints = null;

  @SerializedName("day")
  private String day = null;

  @SerializedName("discount")
  private BigDecimal discount = null;

  @SerializedName("dpmPerContainerHostQuota")
  private Long dpmPerContainerHostQuota = null;

  @SerializedName("dpmPerHostQuota")
  private Long dpmPerHostQuota = null;

  @SerializedName("fixedMonthlyPrice")
  private BigDecimal fixedMonthlyPrice = null;

  @SerializedName("fixedMonthlyPricePerHour")
  private BigDecimal fixedMonthlyPricePerHour = null;

  @SerializedName("freeContainersPerHost")
  private Integer freeContainersPerHost = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("kiloDpmOveragePricePerHour")
  private BigDecimal kiloDpmOveragePricePerHour = null;

  /**
   * Gets or Sets planType
   */
  @JsonAdapter(PlanTypeEnum.Adapter.class)
  public enum PlanTypeEnum {
    INFRA("INFRA"),
    PER_AGENT("PER_AGENT"),
    FIXED_PRICE("FIXED_PRICE"),
    PER_VOLUME("PER_VOLUME");

    private String value;

    PlanTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PlanTypeEnum fromValue(String input) {
      for (PlanTypeEnum b : PlanTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PlanTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PlanTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public PlanTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return PlanTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("planType")
  private PlanTypeEnum planType = null;

  @SerializedName("pricePerContainerHostHour")
  private BigDecimal pricePerContainerHostHour = null;

  @SerializedName("pricePerContainerHour")
  private BigDecimal pricePerContainerHour = null;

  @SerializedName("pricePerServerHour")
  private BigDecimal pricePerServerHour = null;

  @SerializedName("sumNumberOfContainerHosts")
  private Integer sumNumberOfContainerHosts = null;

  @SerializedName("sumNumberOfContainers")
  private Integer sumNumberOfContainers = null;

  @SerializedName("sumNumberOfServers")
  private Integer sumNumberOfServers = null;

  @SerializedName("usageAmount")
  private BigDecimal usageAmount = null;

  @SerializedName("usedPlan")
  private String usedPlan = null;

  @SerializedName("userDiscount")
  private BigDecimal userDiscount = null;

  public DayUsageData countDailyDataPoints(Integer countDailyDataPoints) {
    this.countDailyDataPoints = countDailyDataPoints;
    return this;
  }

   /**
   * Get countDailyDataPoints
   * @return countDailyDataPoints
  **/
  @Schema(description = "")
  public Integer getCountDailyDataPoints() {
    return countDailyDataPoints;
  }

  public void setCountDailyDataPoints(Integer countDailyDataPoints) {
    this.countDailyDataPoints = countDailyDataPoints;
  }

  public DayUsageData day(String day) {
    this.day = day;
    return this;
  }

   /**
   * Get day
   * @return day
  **/
  @Schema(description = "")
  public String getDay() {
    return day;
  }

  public void setDay(String day) {
    this.day = day;
  }

  public DayUsageData discount(BigDecimal discount) {
    this.discount = discount;
    return this;
  }

   /**
   * Get discount
   * @return discount
  **/
  @Schema(description = "")
  public BigDecimal getDiscount() {
    return discount;
  }

  public void setDiscount(BigDecimal discount) {
    this.discount = discount;
  }

  public DayUsageData dpmPerContainerHostQuota(Long dpmPerContainerHostQuota) {
    this.dpmPerContainerHostQuota = dpmPerContainerHostQuota;
    return this;
  }

   /**
   * Get dpmPerContainerHostQuota
   * @return dpmPerContainerHostQuota
  **/
  @Schema(description = "")
  public Long getDpmPerContainerHostQuota() {
    return dpmPerContainerHostQuota;
  }

  public void setDpmPerContainerHostQuota(Long dpmPerContainerHostQuota) {
    this.dpmPerContainerHostQuota = dpmPerContainerHostQuota;
  }

  public DayUsageData dpmPerHostQuota(Long dpmPerHostQuota) {
    this.dpmPerHostQuota = dpmPerHostQuota;
    return this;
  }

   /**
   * Get dpmPerHostQuota
   * @return dpmPerHostQuota
  **/
  @Schema(description = "")
  public Long getDpmPerHostQuota() {
    return dpmPerHostQuota;
  }

  public void setDpmPerHostQuota(Long dpmPerHostQuota) {
    this.dpmPerHostQuota = dpmPerHostQuota;
  }

  public DayUsageData fixedMonthlyPrice(BigDecimal fixedMonthlyPrice) {
    this.fixedMonthlyPrice = fixedMonthlyPrice;
    return this;
  }

   /**
   * Get fixedMonthlyPrice
   * @return fixedMonthlyPrice
  **/
  @Schema(description = "")
  public BigDecimal getFixedMonthlyPrice() {
    return fixedMonthlyPrice;
  }

  public void setFixedMonthlyPrice(BigDecimal fixedMonthlyPrice) {
    this.fixedMonthlyPrice = fixedMonthlyPrice;
  }

  public DayUsageData fixedMonthlyPricePerHour(BigDecimal fixedMonthlyPricePerHour) {
    this.fixedMonthlyPricePerHour = fixedMonthlyPricePerHour;
    return this;
  }

   /**
   * Get fixedMonthlyPricePerHour
   * @return fixedMonthlyPricePerHour
  **/
  @Schema(description = "")
  public BigDecimal getFixedMonthlyPricePerHour() {
    return fixedMonthlyPricePerHour;
  }

  public void setFixedMonthlyPricePerHour(BigDecimal fixedMonthlyPricePerHour) {
    this.fixedMonthlyPricePerHour = fixedMonthlyPricePerHour;
  }

  public DayUsageData freeContainersPerHost(Integer freeContainersPerHost) {
    this.freeContainersPerHost = freeContainersPerHost;
    return this;
  }

   /**
   * Get freeContainersPerHost
   * @return freeContainersPerHost
  **/
  @Schema(description = "")
  public Integer getFreeContainersPerHost() {
    return freeContainersPerHost;
  }

  public void setFreeContainersPerHost(Integer freeContainersPerHost) {
    this.freeContainersPerHost = freeContainersPerHost;
  }

  public DayUsageData id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DayUsageData kiloDpmOveragePricePerHour(BigDecimal kiloDpmOveragePricePerHour) {
    this.kiloDpmOveragePricePerHour = kiloDpmOveragePricePerHour;
    return this;
  }

   /**
   * Get kiloDpmOveragePricePerHour
   * @return kiloDpmOveragePricePerHour
  **/
  @Schema(description = "")
  public BigDecimal getKiloDpmOveragePricePerHour() {
    return kiloDpmOveragePricePerHour;
  }

  public void setKiloDpmOveragePricePerHour(BigDecimal kiloDpmOveragePricePerHour) {
    this.kiloDpmOveragePricePerHour = kiloDpmOveragePricePerHour;
  }

  public DayUsageData planType(PlanTypeEnum planType) {
    this.planType = planType;
    return this;
  }

   /**
   * Get planType
   * @return planType
  **/
  @Schema(description = "")
  public PlanTypeEnum getPlanType() {
    return planType;
  }

  public void setPlanType(PlanTypeEnum planType) {
    this.planType = planType;
  }

  public DayUsageData pricePerContainerHostHour(BigDecimal pricePerContainerHostHour) {
    this.pricePerContainerHostHour = pricePerContainerHostHour;
    return this;
  }

   /**
   * Get pricePerContainerHostHour
   * @return pricePerContainerHostHour
  **/
  @Schema(description = "")
  public BigDecimal getPricePerContainerHostHour() {
    return pricePerContainerHostHour;
  }

  public void setPricePerContainerHostHour(BigDecimal pricePerContainerHostHour) {
    this.pricePerContainerHostHour = pricePerContainerHostHour;
  }

  public DayUsageData pricePerContainerHour(BigDecimal pricePerContainerHour) {
    this.pricePerContainerHour = pricePerContainerHour;
    return this;
  }

   /**
   * Get pricePerContainerHour
   * @return pricePerContainerHour
  **/
  @Schema(description = "")
  public BigDecimal getPricePerContainerHour() {
    return pricePerContainerHour;
  }

  public void setPricePerContainerHour(BigDecimal pricePerContainerHour) {
    this.pricePerContainerHour = pricePerContainerHour;
  }

  public DayUsageData pricePerServerHour(BigDecimal pricePerServerHour) {
    this.pricePerServerHour = pricePerServerHour;
    return this;
  }

   /**
   * Get pricePerServerHour
   * @return pricePerServerHour
  **/
  @Schema(description = "")
  public BigDecimal getPricePerServerHour() {
    return pricePerServerHour;
  }

  public void setPricePerServerHour(BigDecimal pricePerServerHour) {
    this.pricePerServerHour = pricePerServerHour;
  }

  public DayUsageData sumNumberOfContainerHosts(Integer sumNumberOfContainerHosts) {
    this.sumNumberOfContainerHosts = sumNumberOfContainerHosts;
    return this;
  }

   /**
   * Get sumNumberOfContainerHosts
   * @return sumNumberOfContainerHosts
  **/
  @Schema(description = "")
  public Integer getSumNumberOfContainerHosts() {
    return sumNumberOfContainerHosts;
  }

  public void setSumNumberOfContainerHosts(Integer sumNumberOfContainerHosts) {
    this.sumNumberOfContainerHosts = sumNumberOfContainerHosts;
  }

  public DayUsageData sumNumberOfContainers(Integer sumNumberOfContainers) {
    this.sumNumberOfContainers = sumNumberOfContainers;
    return this;
  }

   /**
   * Get sumNumberOfContainers
   * @return sumNumberOfContainers
  **/
  @Schema(description = "")
  public Integer getSumNumberOfContainers() {
    return sumNumberOfContainers;
  }

  public void setSumNumberOfContainers(Integer sumNumberOfContainers) {
    this.sumNumberOfContainers = sumNumberOfContainers;
  }

  public DayUsageData sumNumberOfServers(Integer sumNumberOfServers) {
    this.sumNumberOfServers = sumNumberOfServers;
    return this;
  }

   /**
   * Get sumNumberOfServers
   * @return sumNumberOfServers
  **/
  @Schema(description = "")
  public Integer getSumNumberOfServers() {
    return sumNumberOfServers;
  }

  public void setSumNumberOfServers(Integer sumNumberOfServers) {
    this.sumNumberOfServers = sumNumberOfServers;
  }

  public DayUsageData usageAmount(BigDecimal usageAmount) {
    this.usageAmount = usageAmount;
    return this;
  }

   /**
   * Get usageAmount
   * @return usageAmount
  **/
  @Schema(description = "")
  public BigDecimal getUsageAmount() {
    return usageAmount;
  }

  public void setUsageAmount(BigDecimal usageAmount) {
    this.usageAmount = usageAmount;
  }

  public DayUsageData usedPlan(String usedPlan) {
    this.usedPlan = usedPlan;
    return this;
  }

   /**
   * Get usedPlan
   * @return usedPlan
  **/
  @Schema(description = "")
  public String getUsedPlan() {
    return usedPlan;
  }

  public void setUsedPlan(String usedPlan) {
    this.usedPlan = usedPlan;
  }

  public DayUsageData userDiscount(BigDecimal userDiscount) {
    this.userDiscount = userDiscount;
    return this;
  }

   /**
   * Get userDiscount
   * @return userDiscount
  **/
  @Schema(description = "")
  public BigDecimal getUserDiscount() {
    return userDiscount;
  }

  public void setUserDiscount(BigDecimal userDiscount) {
    this.userDiscount = userDiscount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DayUsageData dayUsageData = (DayUsageData) o;
    return Objects.equals(this.countDailyDataPoints, dayUsageData.countDailyDataPoints) &&
        Objects.equals(this.day, dayUsageData.day) &&
        Objects.equals(this.discount, dayUsageData.discount) &&
        Objects.equals(this.dpmPerContainerHostQuota, dayUsageData.dpmPerContainerHostQuota) &&
        Objects.equals(this.dpmPerHostQuota, dayUsageData.dpmPerHostQuota) &&
        Objects.equals(this.fixedMonthlyPrice, dayUsageData.fixedMonthlyPrice) &&
        Objects.equals(this.fixedMonthlyPricePerHour, dayUsageData.fixedMonthlyPricePerHour) &&
        Objects.equals(this.freeContainersPerHost, dayUsageData.freeContainersPerHost) &&
        Objects.equals(this.id, dayUsageData.id) &&
        Objects.equals(this.kiloDpmOveragePricePerHour, dayUsageData.kiloDpmOveragePricePerHour) &&
        Objects.equals(this.planType, dayUsageData.planType) &&
        Objects.equals(this.pricePerContainerHostHour, dayUsageData.pricePerContainerHostHour) &&
        Objects.equals(this.pricePerContainerHour, dayUsageData.pricePerContainerHour) &&
        Objects.equals(this.pricePerServerHour, dayUsageData.pricePerServerHour) &&
        Objects.equals(this.sumNumberOfContainerHosts, dayUsageData.sumNumberOfContainerHosts) &&
        Objects.equals(this.sumNumberOfContainers, dayUsageData.sumNumberOfContainers) &&
        Objects.equals(this.sumNumberOfServers, dayUsageData.sumNumberOfServers) &&
        Objects.equals(this.usageAmount, dayUsageData.usageAmount) &&
        Objects.equals(this.usedPlan, dayUsageData.usedPlan) &&
        Objects.equals(this.userDiscount, dayUsageData.userDiscount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countDailyDataPoints, day, discount, dpmPerContainerHostQuota, dpmPerHostQuota, fixedMonthlyPrice, fixedMonthlyPricePerHour, freeContainersPerHost, id, kiloDpmOveragePricePerHour, planType, pricePerContainerHostHour, pricePerContainerHour, pricePerServerHour, sumNumberOfContainerHosts, sumNumberOfContainers, sumNumberOfServers, usageAmount, usedPlan, userDiscount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DayUsageData {\n");
    
    sb.append("    countDailyDataPoints: ").append(toIndentedString(countDailyDataPoints)).append("\n");
    sb.append("    day: ").append(toIndentedString(day)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    dpmPerContainerHostQuota: ").append(toIndentedString(dpmPerContainerHostQuota)).append("\n");
    sb.append("    dpmPerHostQuota: ").append(toIndentedString(dpmPerHostQuota)).append("\n");
    sb.append("    fixedMonthlyPrice: ").append(toIndentedString(fixedMonthlyPrice)).append("\n");
    sb.append("    fixedMonthlyPricePerHour: ").append(toIndentedString(fixedMonthlyPricePerHour)).append("\n");
    sb.append("    freeContainersPerHost: ").append(toIndentedString(freeContainersPerHost)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    kiloDpmOveragePricePerHour: ").append(toIndentedString(kiloDpmOveragePricePerHour)).append("\n");
    sb.append("    planType: ").append(toIndentedString(planType)).append("\n");
    sb.append("    pricePerContainerHostHour: ").append(toIndentedString(pricePerContainerHostHour)).append("\n");
    sb.append("    pricePerContainerHour: ").append(toIndentedString(pricePerContainerHour)).append("\n");
    sb.append("    pricePerServerHour: ").append(toIndentedString(pricePerServerHour)).append("\n");
    sb.append("    sumNumberOfContainerHosts: ").append(toIndentedString(sumNumberOfContainerHosts)).append("\n");
    sb.append("    sumNumberOfContainers: ").append(toIndentedString(sumNumberOfContainers)).append("\n");
    sb.append("    sumNumberOfServers: ").append(toIndentedString(sumNumberOfServers)).append("\n");
    sb.append("    usageAmount: ").append(toIndentedString(usageAmount)).append("\n");
    sb.append("    usedPlan: ").append(toIndentedString(usedPlan)).append("\n");
    sb.append("    userDiscount: ").append(toIndentedString(userDiscount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
