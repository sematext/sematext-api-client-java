/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sematext.cloud.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * SubscriptionDto
 */

public class SubscriptionDto {
  @SerializedName("addresses")
  private String addresses = null;

  @SerializedName("enable")
  private Boolean enable = null;

  @SerializedName("filters")
  private String filters = null;

  /**
   * Gets or Sets frequency
   */
  @JsonAdapter(FrequencyEnum.Adapter.class)
  public enum FrequencyEnum {
    EVERY_FIVE_MINUTES("EVERY_FIVE_MINUTES"),

    DAILY("DAILY"),

    WEEKLY("WEEKLY"),

    MONTHLY("MONTHLY"),

    QUARTERLY("QUARTERLY");

    private String value;

    FrequencyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FrequencyEnum fromValue(String text) {
      for (FrequencyEnum b : FrequencyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<FrequencyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FrequencyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FrequencyEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FrequencyEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("frequency")
  private FrequencyEnum frequency = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("reportName")
  private String reportName = null;

  @SerializedName("sendTime")
  private OffsetDateTime sendTime = null;

  @SerializedName("subject")
  private String subject = null;

  @SerializedName("systemId")
  private Long systemId = null;

  @SerializedName("text")
  private String text = null;

  /**
   * Gets or Sets timeRange
   */
  @JsonAdapter(TimeRangeEnum.Adapter.class)
  public enum TimeRangeEnum {
    ONE_DAY("ONE_DAY"),

    ONE_WEEK("ONE_WEEK"),

    ONE_MONTH("ONE_MONTH"),

    TWO_MONTH("TWO_MONTH"),

    SIX_MONTH("SIX_MONTH"),

    ONE_YEAR("ONE_YEAR");

    private String value;

    TimeRangeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TimeRangeEnum fromValue(String text) {
      for (TimeRangeEnum b : TimeRangeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TimeRangeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TimeRangeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TimeRangeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TimeRangeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("timeRange")
  private TimeRangeEnum timeRange = null;

  @SerializedName("userPermissions")
  private UserPermissions userPermissions = null;

  public SubscriptionDto addresses(String addresses) {
    this.addresses = addresses;
    return this;
  }

  /**
   * Get addresses
   * 
   * @return addresses
   **/
  @ApiModelProperty(value = "")
  public String getAddresses() {
    return addresses;
  }

  public void setAddresses(String addresses) {
    this.addresses = addresses;
  }

  public SubscriptionDto enable(Boolean enable) {
    this.enable = enable;
    return this;
  }

  /**
   * Get enable
   * 
   * @return enable
   **/
  @ApiModelProperty(value = "")
  public Boolean isEnable() {
    return enable;
  }

  public void setEnable(Boolean enable) {
    this.enable = enable;
  }

  public SubscriptionDto filters(String filters) {
    this.filters = filters;
    return this;
  }

  /**
   * Get filters
   * 
   * @return filters
   **/
  @ApiModelProperty(value = "")
  public String getFilters() {
    return filters;
  }

  public void setFilters(String filters) {
    this.filters = filters;
  }

  public SubscriptionDto frequency(FrequencyEnum frequency) {
    this.frequency = frequency;
    return this;
  }

  /**
   * Get frequency
   * 
   * @return frequency
   **/
  @ApiModelProperty(value = "")
  public FrequencyEnum getFrequency() {
    return frequency;
  }

  public void setFrequency(FrequencyEnum frequency) {
    this.frequency = frequency;
  }

  public SubscriptionDto id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * 
   * @return id
   **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public SubscriptionDto reportName(String reportName) {
    this.reportName = reportName;
    return this;
  }

  /**
   * Get reportName
   * 
   * @return reportName
   **/
  @ApiModelProperty(value = "")
  public String getReportName() {
    return reportName;
  }

  public void setReportName(String reportName) {
    this.reportName = reportName;
  }

  public SubscriptionDto sendTime(OffsetDateTime sendTime) {
    this.sendTime = sendTime;
    return this;
  }

  /**
   * Get sendTime
   * 
   * @return sendTime
   **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getSendTime() {
    return sendTime;
  }

  public void setSendTime(OffsetDateTime sendTime) {
    this.sendTime = sendTime;
  }

  public SubscriptionDto subject(String subject) {
    this.subject = subject;
    return this;
  }

  /**
   * Get subject
   * 
   * @return subject
   **/
  @ApiModelProperty(value = "")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public SubscriptionDto systemId(Long systemId) {
    this.systemId = systemId;
    return this;
  }

  /**
   * Get systemId
   * 
   * @return systemId
   **/
  @ApiModelProperty(value = "")
  public Long getSystemId() {
    return systemId;
  }

  public void setSystemId(Long systemId) {
    this.systemId = systemId;
  }

  public SubscriptionDto text(String text) {
    this.text = text;
    return this;
  }

  /**
   * Get text
   * 
   * @return text
   **/
  @ApiModelProperty(value = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public SubscriptionDto timeRange(TimeRangeEnum timeRange) {
    this.timeRange = timeRange;
    return this;
  }

  /**
   * Get timeRange
   * 
   * @return timeRange
   **/
  @ApiModelProperty(value = "")
  public TimeRangeEnum getTimeRange() {
    return timeRange;
  }

  public void setTimeRange(TimeRangeEnum timeRange) {
    this.timeRange = timeRange;
  }

  public SubscriptionDto userPermissions(UserPermissions userPermissions) {
    this.userPermissions = userPermissions;
    return this;
  }

  /**
   * Get userPermissions
   * 
   * @return userPermissions
   **/
  @ApiModelProperty(value = "")
  public UserPermissions getUserPermissions() {
    return userPermissions;
  }

  public void setUserPermissions(UserPermissions userPermissions) {
    this.userPermissions = userPermissions;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionDto subscriptionDto = (SubscriptionDto) o;
    return Objects.equals(this.addresses, subscriptionDto.addresses)
        && Objects.equals(this.enable, subscriptionDto.enable) && Objects.equals(this.filters, subscriptionDto.filters)
        && Objects.equals(this.frequency, subscriptionDto.frequency) && Objects.equals(this.id, subscriptionDto.id)
        && Objects.equals(this.reportName, subscriptionDto.reportName)
        && Objects.equals(this.sendTime, subscriptionDto.sendTime)
        && Objects.equals(this.subject, subscriptionDto.subject)
        && Objects.equals(this.systemId, subscriptionDto.systemId) && Objects.equals(this.text, subscriptionDto.text)
        && Objects.equals(this.timeRange, subscriptionDto.timeRange)
        && Objects.equals(this.userPermissions, subscriptionDto.userPermissions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addresses, enable, filters, frequency, id, reportName, sendTime, subject, systemId, text,
        timeRange, userPermissions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionDto {\n");

    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    enable: ").append(toIndentedString(enable)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    reportName: ").append(toIndentedString(reportName)).append("\n");
    sb.append("    sendTime: ").append(toIndentedString(sendTime)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    systemId: ").append(toIndentedString(systemId)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    timeRange: ").append(toIndentedString(timeRange)).append("\n");
    sb.append("    userPermissions: ").append(toIndentedString(userPermissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
