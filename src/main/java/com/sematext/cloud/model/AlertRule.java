/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sematext.cloud.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sematext.cloud.model.AlertRuleScheduleWeekdayDto;
import com.sematext.cloud.model.FilterValue;
import com.sematext.cloud.model.NotificationIntegration;
import com.sematext.cloud.model.UserPermissions;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * AlertRule
 */


public class AlertRule {
  @SerializedName("accountEmail")
  private String accountEmail = null;

  @SerializedName("allowedAppTypes")
  private List<Long> allowedAppTypes = null;

  @SerializedName("analyzingTime")
  private String analyzingTime = null;

  @SerializedName("appDisplayState")
  private String appDisplayState = null;

  @SerializedName("appId")
  private Long appId = null;

  @SerializedName("appName")
  private String appName = null;

  @SerializedName("appState")
  private String appState = null;

  @SerializedName("appToken")
  private String appToken = null;

  @SerializedName("appType")
  private String appType = null;

  @SerializedName("backToNormalNeeded")
  private Boolean backToNormalNeeded = null;

  @SerializedName("chartKey")
  private String chartKey = null;

  @SerializedName("color")
  private String color = null;

  @SerializedName("creatorEmail")
  private String creatorEmail = null;

  @SerializedName("defaultAggType")
  private String defaultAggType = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("disallowedAppTypes")
  private List<Long> disallowedAppTypes = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  /**
   * Gets or Sets estimateOperation
   */
  @JsonAdapter(EstimateOperationEnum.Adapter.class)
  public enum EstimateOperationEnum {
    LESS("LESS"),
    MORE("MORE"),
    EQUAL("EQUAL"),
    UN_EQUAL("UN_EQUAL"),
    LESS_OR_EQUAL("LESS_OR_EQUAL"),
    MORE_OR_EQUAL("MORE_OR_EQUAL");

    private String value;

    EstimateOperationEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static EstimateOperationEnum fromValue(String input) {
      for (EstimateOperationEnum b : EstimateOperationEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<EstimateOperationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EstimateOperationEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public EstimateOperationEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return EstimateOperationEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("estimateOperation")
  private EstimateOperationEnum estimateOperation = null;

  @SerializedName("estimateValue")
  private Double estimateValue = null;

  @SerializedName("filterValues")
  private String filterValues = null;

  @SerializedName("filterValuesObj")
  private List<FilterValue> filterValuesObj = null;

  @SerializedName("ignoreRegularEventsEnabled")
  private Boolean ignoreRegularEventsEnabled = null;

  @SerializedName("integrations")
  private String integrations = null;

  @SerializedName("lastDataReceivedDate")
  private Long lastDataReceivedDate = null;

  @SerializedName("lastSent")
  private Long lastSent = null;

  @SerializedName("lastTriggered")
  private Long lastTriggered = null;

  @SerializedName("metadata")
  private Object metadata = null;

  @SerializedName("metricKey")
  private String metricKey = null;

  @SerializedName("metricLabel")
  private String metricLabel = null;

  @SerializedName("minDelayBetweenNotificationsInMinutes")
  private String minDelayBetweenNotificationsInMinutes = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("notificationEmails")
  private List<String> notificationEmails = null;

  @SerializedName("notificationIntegrations")
  private List<NotificationIntegration> notificationIntegrations = null;

  @SerializedName("notificationsEnabled")
  private Boolean notificationsEnabled = null;

  @SerializedName("query")
  private String query = null;

  @SerializedName("reportName")
  private String reportName = null;

  @SerializedName("ruleKey")
  private Long ruleKey = null;

  @SerializedName("ruleType")
  private String ruleType = null;

  @SerializedName("runbook")
  private String runbook = null;

  @SerializedName("savedQueryId")
  private Long savedQueryId = null;

  @SerializedName("schedule")
  private List<AlertRuleScheduleWeekdayDto> schedule = null;

  @SerializedName("sematextService")
  private String sematextService = null;

  @SerializedName("sendToEmail")
  private String sendToEmail = null;

  @SerializedName("timezone")
  private String timezone = null;

  @SerializedName("useOnlyAlertRuleIntegrations")
  private Boolean useOnlyAlertRuleIntegrations = null;

  @SerializedName("userPermissions")
  private UserPermissions userPermissions = null;

  @SerializedName("valueColumnName")
  private String valueColumnName = null;

  @SerializedName("valueName")
  private String valueName = null;

   /**
   * Get accountEmail
   * @return accountEmail
  **/
  @Schema(description = "")
  public String getAccountEmail() {
    return accountEmail;
  }

  public AlertRule allowedAppTypes(List<Long> allowedAppTypes) {
    this.allowedAppTypes = allowedAppTypes;
    return this;
  }

  public AlertRule addAllowedAppTypesItem(Long allowedAppTypesItem) {
    if (this.allowedAppTypes == null) {
      this.allowedAppTypes = new ArrayList<>();
    }
    this.allowedAppTypes.add(allowedAppTypesItem);
    return this;
  }

   /**
   * Get allowedAppTypes
   * @return allowedAppTypes
  **/
  @Schema(description = "")
  public List<Long> getAllowedAppTypes() {
    return allowedAppTypes;
  }

  public void setAllowedAppTypes(List<Long> allowedAppTypes) {
    this.allowedAppTypes = allowedAppTypes;
  }

  public AlertRule analyzingTime(String analyzingTime) {
    this.analyzingTime = analyzingTime;
    return this;
  }

   /**
   * Get analyzingTime
   * @return analyzingTime
  **/
  @Schema(description = "")
  public String getAnalyzingTime() {
    return analyzingTime;
  }

  public void setAnalyzingTime(String analyzingTime) {
    this.analyzingTime = analyzingTime;
  }

   /**
   * Get appDisplayState
   * @return appDisplayState
  **/
  @Schema(description = "")
  public String getAppDisplayState() {
    return appDisplayState;
  }

  public AlertRule appId(Long appId) {
    this.appId = appId;
    return this;
  }

   /**
   * Get appId
   * @return appId
  **/
  @Schema(description = "")
  public Long getAppId() {
    return appId;
  }

  public void setAppId(Long appId) {
    this.appId = appId;
  }

   /**
   * Get appName
   * @return appName
  **/
  @Schema(description = "")
  public String getAppName() {
    return appName;
  }

   /**
   * Get appState
   * @return appState
  **/
  @Schema(description = "")
  public String getAppState() {
    return appState;
  }

   /**
   * Get appToken
   * @return appToken
  **/
  @Schema(description = "")
  public String getAppToken() {
    return appToken;
  }

   /**
   * Get appType
   * @return appType
  **/
  @Schema(description = "")
  public String getAppType() {
    return appType;
  }

  public AlertRule backToNormalNeeded(Boolean backToNormalNeeded) {
    this.backToNormalNeeded = backToNormalNeeded;
    return this;
  }

   /**
   * Get backToNormalNeeded
   * @return backToNormalNeeded
  **/
  @Schema(description = "")
  public Boolean isBackToNormalNeeded() {
    return backToNormalNeeded;
  }

  public void setBackToNormalNeeded(Boolean backToNormalNeeded) {
    this.backToNormalNeeded = backToNormalNeeded;
  }

  public AlertRule chartKey(String chartKey) {
    this.chartKey = chartKey;
    return this;
  }

   /**
   * Get chartKey
   * @return chartKey
  **/
  @Schema(description = "")
  public String getChartKey() {
    return chartKey;
  }

  public void setChartKey(String chartKey) {
    this.chartKey = chartKey;
  }

  public AlertRule color(String color) {
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @Schema(description = "")
  public String getColor() {
    return color;
  }

  public void setColor(String color) {
    this.color = color;
  }

   /**
   * Get creatorEmail
   * @return creatorEmail
  **/
  @Schema(description = "")
  public String getCreatorEmail() {
    return creatorEmail;
  }

   /**
   * Get defaultAggType
   * @return defaultAggType
  **/
  @Schema(description = "")
  public String getDefaultAggType() {
    return defaultAggType;
  }

  public AlertRule description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public AlertRule disallowedAppTypes(List<Long> disallowedAppTypes) {
    this.disallowedAppTypes = disallowedAppTypes;
    return this;
  }

  public AlertRule addDisallowedAppTypesItem(Long disallowedAppTypesItem) {
    if (this.disallowedAppTypes == null) {
      this.disallowedAppTypes = new ArrayList<>();
    }
    this.disallowedAppTypes.add(disallowedAppTypesItem);
    return this;
  }

   /**
   * Get disallowedAppTypes
   * @return disallowedAppTypes
  **/
  @Schema(description = "")
  public List<Long> getDisallowedAppTypes() {
    return disallowedAppTypes;
  }

  public void setDisallowedAppTypes(List<Long> disallowedAppTypes) {
    this.disallowedAppTypes = disallowedAppTypes;
  }

  public AlertRule enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public AlertRule estimateOperation(EstimateOperationEnum estimateOperation) {
    this.estimateOperation = estimateOperation;
    return this;
  }

   /**
   * Get estimateOperation
   * @return estimateOperation
  **/
  @Schema(description = "")
  public EstimateOperationEnum getEstimateOperation() {
    return estimateOperation;
  }

  public void setEstimateOperation(EstimateOperationEnum estimateOperation) {
    this.estimateOperation = estimateOperation;
  }

  public AlertRule estimateValue(Double estimateValue) {
    this.estimateValue = estimateValue;
    return this;
  }

   /**
   * Get estimateValue
   * @return estimateValue
  **/
  @Schema(description = "")
  public Double getEstimateValue() {
    return estimateValue;
  }

  public void setEstimateValue(Double estimateValue) {
    this.estimateValue = estimateValue;
  }

  public AlertRule filterValues(String filterValues) {
    this.filterValues = filterValues;
    return this;
  }

   /**
   * Get filterValues
   * @return filterValues
  **/
  @Schema(description = "")
  public String getFilterValues() {
    return filterValues;
  }

  public void setFilterValues(String filterValues) {
    this.filterValues = filterValues;
  }

  public AlertRule filterValuesObj(List<FilterValue> filterValuesObj) {
    this.filterValuesObj = filterValuesObj;
    return this;
  }

  public AlertRule addFilterValuesObjItem(FilterValue filterValuesObjItem) {
    if (this.filterValuesObj == null) {
      this.filterValuesObj = new ArrayList<>();
    }
    this.filterValuesObj.add(filterValuesObjItem);
    return this;
  }

   /**
   * Get filterValuesObj
   * @return filterValuesObj
  **/
  @Schema(description = "")
  public List<FilterValue> getFilterValuesObj() {
    return filterValuesObj;
  }

  public void setFilterValuesObj(List<FilterValue> filterValuesObj) {
    this.filterValuesObj = filterValuesObj;
  }

  public AlertRule ignoreRegularEventsEnabled(Boolean ignoreRegularEventsEnabled) {
    this.ignoreRegularEventsEnabled = ignoreRegularEventsEnabled;
    return this;
  }

   /**
   * Get ignoreRegularEventsEnabled
   * @return ignoreRegularEventsEnabled
  **/
  @Schema(description = "")
  public Boolean isIgnoreRegularEventsEnabled() {
    return ignoreRegularEventsEnabled;
  }

  public void setIgnoreRegularEventsEnabled(Boolean ignoreRegularEventsEnabled) {
    this.ignoreRegularEventsEnabled = ignoreRegularEventsEnabled;
  }

   /**
   * Get integrations
   * @return integrations
  **/
  @Schema(description = "")
  public String getIntegrations() {
    return integrations;
  }

   /**
   * Get lastDataReceivedDate
   * @return lastDataReceivedDate
  **/
  @Schema(description = "")
  public Long getLastDataReceivedDate() {
    return lastDataReceivedDate;
  }

   /**
   * Get lastSent
   * @return lastSent
  **/
  @Schema(description = "")
  public Long getLastSent() {
    return lastSent;
  }

   /**
   * Get lastTriggered
   * @return lastTriggered
  **/
  @Schema(description = "")
  public Long getLastTriggered() {
    return lastTriggered;
  }

  public AlertRule metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @Schema(description = "")
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }

   /**
   * Get metricKey
   * @return metricKey
  **/
  @Schema(description = "")
  public String getMetricKey() {
    return metricKey;
  }

  public AlertRule metricLabel(String metricLabel) {
    this.metricLabel = metricLabel;
    return this;
  }

   /**
   * Get metricLabel
   * @return metricLabel
  **/
  @Schema(description = "")
  public String getMetricLabel() {
    return metricLabel;
  }

  public void setMetricLabel(String metricLabel) {
    this.metricLabel = metricLabel;
  }

  public AlertRule minDelayBetweenNotificationsInMinutes(String minDelayBetweenNotificationsInMinutes) {
    this.minDelayBetweenNotificationsInMinutes = minDelayBetweenNotificationsInMinutes;
    return this;
  }

   /**
   * Get minDelayBetweenNotificationsInMinutes
   * @return minDelayBetweenNotificationsInMinutes
  **/
  @Schema(description = "")
  public String getMinDelayBetweenNotificationsInMinutes() {
    return minDelayBetweenNotificationsInMinutes;
  }

  public void setMinDelayBetweenNotificationsInMinutes(String minDelayBetweenNotificationsInMinutes) {
    this.minDelayBetweenNotificationsInMinutes = minDelayBetweenNotificationsInMinutes;
  }

  public AlertRule name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AlertRule notificationEmails(List<String> notificationEmails) {
    this.notificationEmails = notificationEmails;
    return this;
  }

  public AlertRule addNotificationEmailsItem(String notificationEmailsItem) {
    if (this.notificationEmails == null) {
      this.notificationEmails = new ArrayList<>();
    }
    this.notificationEmails.add(notificationEmailsItem);
    return this;
  }

   /**
   * Get notificationEmails
   * @return notificationEmails
  **/
  @Schema(description = "")
  public List<String> getNotificationEmails() {
    return notificationEmails;
  }

  public void setNotificationEmails(List<String> notificationEmails) {
    this.notificationEmails = notificationEmails;
  }

  public AlertRule notificationIntegrations(List<NotificationIntegration> notificationIntegrations) {
    this.notificationIntegrations = notificationIntegrations;
    return this;
  }

  public AlertRule addNotificationIntegrationsItem(NotificationIntegration notificationIntegrationsItem) {
    if (this.notificationIntegrations == null) {
      this.notificationIntegrations = new ArrayList<>();
    }
    this.notificationIntegrations.add(notificationIntegrationsItem);
    return this;
  }

   /**
   * Get notificationIntegrations
   * @return notificationIntegrations
  **/
  @Schema(description = "")
  public List<NotificationIntegration> getNotificationIntegrations() {
    return notificationIntegrations;
  }

  public void setNotificationIntegrations(List<NotificationIntegration> notificationIntegrations) {
    this.notificationIntegrations = notificationIntegrations;
  }

  public AlertRule notificationsEnabled(Boolean notificationsEnabled) {
    this.notificationsEnabled = notificationsEnabled;
    return this;
  }

   /**
   * Get notificationsEnabled
   * @return notificationsEnabled
  **/
  @Schema(description = "")
  public Boolean isNotificationsEnabled() {
    return notificationsEnabled;
  }

  public void setNotificationsEnabled(Boolean notificationsEnabled) {
    this.notificationsEnabled = notificationsEnabled;
  }

  public AlertRule query(String query) {
    this.query = query;
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @Schema(description = "")
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }

  public AlertRule reportName(String reportName) {
    this.reportName = reportName;
    return this;
  }

   /**
   * Get reportName
   * @return reportName
  **/
  @Schema(description = "")
  public String getReportName() {
    return reportName;
  }

  public void setReportName(String reportName) {
    this.reportName = reportName;
  }

   /**
   * Get ruleKey
   * @return ruleKey
  **/
  @Schema(description = "")
  public Long getRuleKey() {
    return ruleKey;
  }

  public AlertRule ruleType(String ruleType) {
    this.ruleType = ruleType;
    return this;
  }

   /**
   * Get ruleType
   * @return ruleType
  **/
  @Schema(description = "")
  public String getRuleType() {
    return ruleType;
  }

  public void setRuleType(String ruleType) {
    this.ruleType = ruleType;
  }

  public AlertRule runbook(String runbook) {
    this.runbook = runbook;
    return this;
  }

   /**
   * Get runbook
   * @return runbook
  **/
  @Schema(description = "")
  public String getRunbook() {
    return runbook;
  }

  public void setRunbook(String runbook) {
    this.runbook = runbook;
  }

   /**
   * Get savedQueryId
   * @return savedQueryId
  **/
  @Schema(description = "")
  public Long getSavedQueryId() {
    return savedQueryId;
  }

  public AlertRule schedule(List<AlertRuleScheduleWeekdayDto> schedule) {
    this.schedule = schedule;
    return this;
  }

  public AlertRule addScheduleItem(AlertRuleScheduleWeekdayDto scheduleItem) {
    if (this.schedule == null) {
      this.schedule = new ArrayList<>();
    }
    this.schedule.add(scheduleItem);
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @Schema(description = "")
  public List<AlertRuleScheduleWeekdayDto> getSchedule() {
    return schedule;
  }

  public void setSchedule(List<AlertRuleScheduleWeekdayDto> schedule) {
    this.schedule = schedule;
  }

   /**
   * Get sematextService
   * @return sematextService
  **/
  @Schema(description = "")
  public String getSematextService() {
    return sematextService;
  }

  public AlertRule sendToEmail(String sendToEmail) {
    this.sendToEmail = sendToEmail;
    return this;
  }

   /**
   * Get sendToEmail
   * @return sendToEmail
  **/
  @Schema(description = "")
  public String getSendToEmail() {
    return sendToEmail;
  }

  public void setSendToEmail(String sendToEmail) {
    this.sendToEmail = sendToEmail;
  }

  public AlertRule timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * Get timezone
   * @return timezone
  **/
  @Schema(description = "")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public AlertRule useOnlyAlertRuleIntegrations(Boolean useOnlyAlertRuleIntegrations) {
    this.useOnlyAlertRuleIntegrations = useOnlyAlertRuleIntegrations;
    return this;
  }

   /**
   * Get useOnlyAlertRuleIntegrations
   * @return useOnlyAlertRuleIntegrations
  **/
  @Schema(description = "")
  public Boolean isUseOnlyAlertRuleIntegrations() {
    return useOnlyAlertRuleIntegrations;
  }

  public void setUseOnlyAlertRuleIntegrations(Boolean useOnlyAlertRuleIntegrations) {
    this.useOnlyAlertRuleIntegrations = useOnlyAlertRuleIntegrations;
  }

  public AlertRule userPermissions(UserPermissions userPermissions) {
    this.userPermissions = userPermissions;
    return this;
  }

   /**
   * Get userPermissions
   * @return userPermissions
  **/
  @Schema(description = "")
  public UserPermissions getUserPermissions() {
    return userPermissions;
  }

  public void setUserPermissions(UserPermissions userPermissions) {
    this.userPermissions = userPermissions;
  }

   /**
   * Get valueColumnName
   * @return valueColumnName
  **/
  @Schema(description = "")
  public String getValueColumnName() {
    return valueColumnName;
  }

   /**
   * Get valueName
   * @return valueName
  **/
  @Schema(description = "")
  public String getValueName() {
    return valueName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertRule alertRule = (AlertRule) o;
    return Objects.equals(this.accountEmail, alertRule.accountEmail) &&
        Objects.equals(this.allowedAppTypes, alertRule.allowedAppTypes) &&
        Objects.equals(this.analyzingTime, alertRule.analyzingTime) &&
        Objects.equals(this.appDisplayState, alertRule.appDisplayState) &&
        Objects.equals(this.appId, alertRule.appId) &&
        Objects.equals(this.appName, alertRule.appName) &&
        Objects.equals(this.appState, alertRule.appState) &&
        Objects.equals(this.appToken, alertRule.appToken) &&
        Objects.equals(this.appType, alertRule.appType) &&
        Objects.equals(this.backToNormalNeeded, alertRule.backToNormalNeeded) &&
        Objects.equals(this.chartKey, alertRule.chartKey) &&
        Objects.equals(this.color, alertRule.color) &&
        Objects.equals(this.creatorEmail, alertRule.creatorEmail) &&
        Objects.equals(this.defaultAggType, alertRule.defaultAggType) &&
        Objects.equals(this.description, alertRule.description) &&
        Objects.equals(this.disallowedAppTypes, alertRule.disallowedAppTypes) &&
        Objects.equals(this.enabled, alertRule.enabled) &&
        Objects.equals(this.estimateOperation, alertRule.estimateOperation) &&
        Objects.equals(this.estimateValue, alertRule.estimateValue) &&
        Objects.equals(this.filterValues, alertRule.filterValues) &&
        Objects.equals(this.filterValuesObj, alertRule.filterValuesObj) &&
        Objects.equals(this.ignoreRegularEventsEnabled, alertRule.ignoreRegularEventsEnabled) &&
        Objects.equals(this.integrations, alertRule.integrations) &&
        Objects.equals(this.lastDataReceivedDate, alertRule.lastDataReceivedDate) &&
        Objects.equals(this.lastSent, alertRule.lastSent) &&
        Objects.equals(this.lastTriggered, alertRule.lastTriggered) &&
        Objects.equals(this.metadata, alertRule.metadata) &&
        Objects.equals(this.metricKey, alertRule.metricKey) &&
        Objects.equals(this.metricLabel, alertRule.metricLabel) &&
        Objects.equals(this.minDelayBetweenNotificationsInMinutes, alertRule.minDelayBetweenNotificationsInMinutes) &&
        Objects.equals(this.name, alertRule.name) &&
        Objects.equals(this.notificationEmails, alertRule.notificationEmails) &&
        Objects.equals(this.notificationIntegrations, alertRule.notificationIntegrations) &&
        Objects.equals(this.notificationsEnabled, alertRule.notificationsEnabled) &&
        Objects.equals(this.query, alertRule.query) &&
        Objects.equals(this.reportName, alertRule.reportName) &&
        Objects.equals(this.ruleKey, alertRule.ruleKey) &&
        Objects.equals(this.ruleType, alertRule.ruleType) &&
        Objects.equals(this.runbook, alertRule.runbook) &&
        Objects.equals(this.savedQueryId, alertRule.savedQueryId) &&
        Objects.equals(this.schedule, alertRule.schedule) &&
        Objects.equals(this.sematextService, alertRule.sematextService) &&
        Objects.equals(this.sendToEmail, alertRule.sendToEmail) &&
        Objects.equals(this.timezone, alertRule.timezone) &&
        Objects.equals(this.useOnlyAlertRuleIntegrations, alertRule.useOnlyAlertRuleIntegrations) &&
        Objects.equals(this.userPermissions, alertRule.userPermissions) &&
        Objects.equals(this.valueColumnName, alertRule.valueColumnName) &&
        Objects.equals(this.valueName, alertRule.valueName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountEmail, allowedAppTypes, analyzingTime, appDisplayState, appId, appName, appState, appToken, appType, backToNormalNeeded, chartKey, color, creatorEmail, defaultAggType, description, disallowedAppTypes, enabled, estimateOperation, estimateValue, filterValues, filterValuesObj, ignoreRegularEventsEnabled, integrations, lastDataReceivedDate, lastSent, lastTriggered, metadata, metricKey, metricLabel, minDelayBetweenNotificationsInMinutes, name, notificationEmails, notificationIntegrations, notificationsEnabled, query, reportName, ruleKey, ruleType, runbook, savedQueryId, schedule, sematextService, sendToEmail, timezone, useOnlyAlertRuleIntegrations, userPermissions, valueColumnName, valueName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertRule {\n");
    
    sb.append("    accountEmail: ").append(toIndentedString(accountEmail)).append("\n");
    sb.append("    allowedAppTypes: ").append(toIndentedString(allowedAppTypes)).append("\n");
    sb.append("    analyzingTime: ").append(toIndentedString(analyzingTime)).append("\n");
    sb.append("    appDisplayState: ").append(toIndentedString(appDisplayState)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    appName: ").append(toIndentedString(appName)).append("\n");
    sb.append("    appState: ").append(toIndentedString(appState)).append("\n");
    sb.append("    appToken: ").append(toIndentedString(appToken)).append("\n");
    sb.append("    appType: ").append(toIndentedString(appType)).append("\n");
    sb.append("    backToNormalNeeded: ").append(toIndentedString(backToNormalNeeded)).append("\n");
    sb.append("    chartKey: ").append(toIndentedString(chartKey)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    creatorEmail: ").append(toIndentedString(creatorEmail)).append("\n");
    sb.append("    defaultAggType: ").append(toIndentedString(defaultAggType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    disallowedAppTypes: ").append(toIndentedString(disallowedAppTypes)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    estimateOperation: ").append(toIndentedString(estimateOperation)).append("\n");
    sb.append("    estimateValue: ").append(toIndentedString(estimateValue)).append("\n");
    sb.append("    filterValues: ").append(toIndentedString(filterValues)).append("\n");
    sb.append("    filterValuesObj: ").append(toIndentedString(filterValuesObj)).append("\n");
    sb.append("    ignoreRegularEventsEnabled: ").append(toIndentedString(ignoreRegularEventsEnabled)).append("\n");
    sb.append("    integrations: ").append(toIndentedString(integrations)).append("\n");
    sb.append("    lastDataReceivedDate: ").append(toIndentedString(lastDataReceivedDate)).append("\n");
    sb.append("    lastSent: ").append(toIndentedString(lastSent)).append("\n");
    sb.append("    lastTriggered: ").append(toIndentedString(lastTriggered)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    metricKey: ").append(toIndentedString(metricKey)).append("\n");
    sb.append("    metricLabel: ").append(toIndentedString(metricLabel)).append("\n");
    sb.append("    minDelayBetweenNotificationsInMinutes: ").append(toIndentedString(minDelayBetweenNotificationsInMinutes)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notificationEmails: ").append(toIndentedString(notificationEmails)).append("\n");
    sb.append("    notificationIntegrations: ").append(toIndentedString(notificationIntegrations)).append("\n");
    sb.append("    notificationsEnabled: ").append(toIndentedString(notificationsEnabled)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    reportName: ").append(toIndentedString(reportName)).append("\n");
    sb.append("    ruleKey: ").append(toIndentedString(ruleKey)).append("\n");
    sb.append("    ruleType: ").append(toIndentedString(ruleType)).append("\n");
    sb.append("    runbook: ").append(toIndentedString(runbook)).append("\n");
    sb.append("    savedQueryId: ").append(toIndentedString(savedQueryId)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    sematextService: ").append(toIndentedString(sematextService)).append("\n");
    sb.append("    sendToEmail: ").append(toIndentedString(sendToEmail)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    useOnlyAlertRuleIntegrations: ").append(toIndentedString(useOnlyAlertRuleIntegrations)).append("\n");
    sb.append("    userPermissions: ").append(toIndentedString(userPermissions)).append("\n");
    sb.append("    valueColumnName: ").append(toIndentedString(valueColumnName)).append("\n");
    sb.append("    valueName: ").append(toIndentedString(valueName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
